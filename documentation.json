{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "MenuItem",
            "id": "class-MenuItem-eb573608474890945a20e3fb22aa9b421f88bfb7b683ff582dcdfe7d2c0236dd6b72e08f5d1aee4ef0ab4bbf96f0b1c8cc942a954cc88b4b4d13a60158ae5003",
            "file": "projects/zs-lib/src/lib/models/menu-item.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class MenuItem {\n    parent: MenuItem | null = null;\n    \n    linkActive: boolean = false;\n    selected: boolean = false;\n    floatMenuState: 'opening' | 'show' | 'closing' | 'hide' | '' = '';\n\n    id!: number;\n\n    icon!: string;\n    label!: string;\n    url!: string | undefined;\n\n    children: MenuItem[] = new Array<MenuItem>();\n\n\n    public getRootNode(): MenuItem {\n        return (this.parent)\n            ? this.parent.getRootNode()\n            : this;\n    }\n}",
            "properties": [
                {
                    "name": "children",
                    "defaultValue": "new Array<MenuItem>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "floatMenuState",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"opening\" | \"show\" | \"closing\" | \"hide\" | string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "linkActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "parent",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem | null",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "getRootNode",
                    "args": [],
                    "optional": false,
                    "returnType": "MenuItem",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "TrackScrollDirective",
            "id": "directive-TrackScrollDirective-bf84ab4dcbbc782d94008a19d91370e6c21eccba8821672bf4a23b1d6ef6b9f7164f14bbee78ab548398efc85e9c5fd9411932bf1f33e1f55d9dde5ac3eab186",
            "file": "projects/zs-lib/src/lib/directives/track-scroll.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, Output } from '@angular/core';\n\n@Directive({\n    selector: '[zambon-lib-track-scroll]'\n})\nexport class TrackScrollDirective {\n\n    @Output() scrolled = new EventEmitter<number>();\n\n    constructor() { }\n\n    track($event: Event) {\n        this.scrolled.emit(($event.target as HTMLElement).scrollTop);\n    }\n}",
            "selector": "[zambon-lib-track-scroll]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "scrolled",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "track",
                    "args": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            }
        }
    ],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-0cd94fbc94a83702e45bf987cb3b3f9074d69cd27e6ca2e4fbac0dc5b5047bd4dc3a9ce8a77f6bd9ab7ae3e6ca8e49b34bed529ca0da0fa428fec544a0324870",
            "file": "stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "LoginInputComponent",
            "id": "component-LoginInputComponent-cf22f77abf700d2f388d13c30c60e13ea3ff69e742a20f5d2e733bc151f9e21636a614c959bc301a4ed1f8693b1c9c856c8a5f5863688c2c449099014feeb719",
            "file": "projects/zs-lib/src/lib/components/login/login-input/login-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zambon-lib-login-input",
            "styleUrls": [
                "./login-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autofocus",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "controlName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "FormGroup",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isInvalid",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "themeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "\"text\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'zambon-lib-login-input',\n    host: { '[class]' : 'themeName' },\n    templateUrl: './login-input.component.html',\n    styleUrls: ['./login-input.component.scss']\n})\nexport class LoginInputComponent implements OnInit {\n\n    @Input() formGroup!: FormGroup;\n\n    @Input() controlName!: string;\n\n    @Input() type: string = \"text\";\n    @Input() icon: string = '';\n    @Input() placeholder: string = '';\n    @Input() themeName?: string;\n\n    @Input() isInvalid: boolean = false;\n\n    @HostBinding('attr.autofocus') @Input() autofocus: boolean = false;\n\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/styles/mixins/login/login-input\";\r\n\r\n@include login-input();\r\n\r\n.form-control {\r\n    border-left: 0;\r\n}",
                    "styleUrl": "./login-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"input-group\" [formGroup]=\"formGroup\">\n    <span class=\"input-group-text\"\n        [class.is-invalid]=\"isInvalid\"\n        [class.border-danger]=\"isInvalid\"\n        [class.bg-danger]=\"isInvalid\"\n    >\n        <label [for]=\"controlName\" *ngIf=\"icon !== ''\">\n            <i class=\"fas fa-{{icon}} fa-fw\"></i>\n        </label>\n    </span>\n\n    <input class=\"form-control rounded-end\"\n        [type]=\"type\"\n        [class.is-invalid]=\"isInvalid\"\n        [class.border-danger]=\"isInvalid\"\n        [placeholder]=\"placeholder\"\n        [id]=\"controlName\"\n        [formControlName]=\"controlName\"\n        [autofocus]=\"autofocus\"\n    />\n\n    <div [class.d-none]=\"!isInvalid\" class=\"invalid-feedback\">\n        <ng-content select=\"[validations]\"></ng-content>\n    </div>\n</div>"
        },
        {
            "name": "LoginInputStoryComponent",
            "id": "component-LoginInputStoryComponent-ddb304847afea397966a6008b241a949e25b748e398a6df0fb1643603b58e3fd1724403d244fc850d0a1949e8ee2e51b4afd092c9744fc5d63a6afec7eae71db",
            "file": "stories/login/login-input-story.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-login-input",
            "styleUrls": [
                "./login-input-story.component.scss"
            ],
            "styles": [],
            "template": "<zambon-lib-login-input    [formGroup]=\"form\"\n    [controlName]=\"'component'\"\n    [type]=\"type\"\n    [icon]=\"icon\"\n    [placeholder]=\"placeholder\"\n    [themeName]=\"theme\"\n    [isInvalid]=\"form.controls['component'].invalid && (form.controls['component'].dirty || form.controls['component'].touched)\"\n  >\n    <div validations>\n      <div [class.d-none]=\"!form.controls['component'].errors?.required\">This field is required</div>\n    </div>\n  </zambon-lib-login-input>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "\"default\" | \"danger\" | \"warning\" | \"success\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'storybook-login-input',\n  template: `<zambon-lib-login-input\n    [formGroup]=\"form\"\n    [controlName]=\"'component'\"\n    [type]=\"type\"\n    [icon]=\"icon\"\n    [placeholder]=\"placeholder\"\n    [themeName]=\"theme\"\n    [isInvalid]=\"form.controls['component'].invalid && (form.controls['component'].dirty || form.controls['component'].touched)\"\n  >\n    <div validations>\n      <div [class.d-none]=\"!form.controls['component'].errors?.required\">This field is required</div>\n    </div>\n  </zambon-lib-login-input>`,\n  styleUrls: [ './login-input-story.component.scss' ]\n})\nexport default class LoginInputStoryComponent {\n  form!: FormGroup;\n  \n  @Input()\n  type: string = 'text';\n  \n  @Input()\n  icon: string = '';\n  \n  @Input()\n  placeholder: string = '';\n\n  @Input()\n  theme: 'default' | 'danger' | 'warning' | 'success' = 'default';\n\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      component: ['', Validators.required]\n  });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../projects/zs-lib/src/assets/styles/mixins/login/login-input';\r\n\r\n@include login-input-theme('danger', $background-color: darkred);\r\n@include login-input-theme('warning', $background-color: orange);\r\n@include login-input-theme('success', $background-color: green);",
                    "styleUrl": "./login-input-story.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "LoginLanguageDropdownComponent",
            "id": "component-LoginLanguageDropdownComponent-86a4fb8fe8afc7fd05f66385260d916cb514a8e59585da5d27d8d4007f69e328307eda4bde403c7afcca2ca0b34cd273496510c95b5b34cdf153f23169c79350",
            "file": "projects/zs-lib/src/lib/components/login/login-language-dropdown/login-language-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zambon-lib-login-language-dropdown",
            "styleUrls": [
                "./login-language-dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login-language-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "languagePrefix",
                    "defaultValue": "'SelectLanguage-'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "themeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'SelectLanguage-Title'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Dropdown",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "dropdownElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLButtonElement>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dropdown'"
                        }
                    ]
                },
                {
                    "name": "languages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "dropdownClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "itemClick",
                    "args": [
                        {
                            "name": "selectedLanguage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedLanguage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Dropdown } from 'bootstrap';\n\n@Component({\n  selector: 'zambon-lib-login-language-dropdown',\n  host: { '[class]' : 'themeName' },\n  templateUrl: './login-language-dropdown.component.html',\n  styleUrls: ['./login-language-dropdown.component.scss']\n})\nexport class LoginLanguageDropdownComponent implements OnInit {\n\n    @ViewChild('dropdown') dropdownElement!: ElementRef<HTMLButtonElement>;\n    dropdown!: Dropdown;\n\n    languages!: string[];\n\n    @Input() title: string = 'SelectLanguage-Title';\n    @Input() languagePrefix: string = 'SelectLanguage-';\n    @Input() themeName?: string;\n\n    constructor(public translate: TranslateService) {\n        this.languages = this.translate.getLangs();\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit(): void {\n        this.dropdown = new Dropdown(this.dropdownElement.nativeElement);\n    }\n\n    dropdownClick(): void {\n        this.dropdown.toggle();\n    }\n\n    itemClick(selectedLanguage: string): void {\n        this.translate.use(selectedLanguage);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/styles/mixins/login/language-dropdown\";\r\n@import \"../../../../assets/styles/mixins/flags\";\r\n\r\n@include language-dropdown();\r\n\r\n.dropdown-toggle {\r\n    .flag {\r\n        background-position: 0em 0.7em;\r\n        padding: 0.5rem 0rem 0.5rem 1.5rem !important;\r\n        background-size: 18px 18px;\r\n    }\r\n}\r\n\r\n.dropdown-menu {\r\n    background-color: transparent;\r\n    font-family: 'Roboto', sans-serif;\r\n    font-size: 0.95rem;\r\n    overflow: hidden;\r\n\r\n    .background {\r\n        background-position: -10px -40px;\r\n\r\n        &:before {\r\n            filter: blur(5px);\r\n        }\r\n    }\r\n\r\n    .dropdown-item {\r\n        font-weight: 400;\r\n        cursor: pointer;\r\n        \r\n        &.flag {\r\n            background-position: 1.2em 0.5em;\r\n            padding: 0.5rem 3rem 0.5rem 3.7rem !important;\r\n        }\r\n        &.selected {\r\n            &:after {\r\n                position: absolute;\r\n                right: 10px;\r\n                padding-top: 2px;\r\n                \r\n                content: '\\f00c';\r\n                font-family: \"Font Awesome 5 Free\";\r\n                font-size: 0.8rem;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n.flag {\r\n    background-repeat: no-repeat;\r\n    background-size: 24px 24px;\r\n    min-height: 2rem;\r\n    \r\n    &.flag-pt {\r\n        @include flags('pt');\r\n    }\r\n    \r\n    &.flag-en {\r\n        @include flags('en');\r\n    }\r\n    \r\n    &.flag-es {\r\n        @include flags('es');\r\n    }\r\n    \r\n    *.flag-it {\r\n        @include flags('it');\r\n    }\r\n    \r\n    *.flag-de {\r\n        @include flags('de');\r\n    }\r\n}",
                    "styleUrl": "./login-language-dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"dropdown\">\n    <button #dropdown class=\"btn btn-language dropdown-toggle\" type=\"button\" id=\"dropdownLanguages\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" (click)=\"dropdownClick()\">\n        <span class=\"flag flag-{{ translate.currentLang }}\">{{title | translate}}</span>\n    </button>\n\n    <ul class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"dropdownLanguages\">\n        <div class=\"background\"></div>\n    \n        <li *ngFor=\"let lang of languages\">\n            <a class=\"dropdown-item flag flag-{{lang}}\"\n                [ngClass]=\"{'selected': lang === translate.currentLang}\"\n                (click)=\"itemClick(lang)\"\n            >\n                {{languagePrefix + lang | translate}}\n            </a>\n        </li>\n    </ul>\n</div>"
        },
        {
            "name": "LoginLanguageInputDropdownStoryComponent",
            "id": "component-LoginLanguageInputDropdownStoryComponent-f2dea43dd30ece315ca029273a85fbb2aef9d25f7c3286bb3384578eaaddae8bc08e1d2bac205c8f92a381afac8c13268628e3daf78aa5c253a8fef38d242d7d",
            "file": "stories/login/login-language-dropdown-story.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-login-input",
            "styleUrls": [
                "./login-language-dropdown-story.component.scss"
            ],
            "styles": [],
            "template": "<zambon-lib-login-language-dropdown [themeName]=\"theme\">  </zambon-lib-login-language-dropdown>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "\"default\" | \"danger\" | \"warning\" | \"success\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'storybook-login-input',\n  template: `<zambon-lib-login-language-dropdown [themeName]=\"theme\">\n  </zambon-lib-login-language-dropdown>`,\n  styleUrls: [ './login-language-dropdown-story.component.scss' ]\n})\nexport default class LoginLanguageInputDropdownStoryComponent {\n  form!: FormGroup;\n  \n  @Input()\n  type: string = 'text';\n  \n  @Input()\n  icon: string = '';\n  \n  @Input()\n  placeholder: string = '';\n\n  @Input()\n  theme: 'default' | 'danger' | 'warning' | 'success' = 'default';\n\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      component: ['', Validators.required]\n  });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../projects/zs-lib/src/assets/styles/mixins/login/language-dropdown';\r\n\r\n@include language-dropdown-theme('danger', $item-active-background-color: darkred);\r\n@include language-dropdown-theme('warning', $item-active-background-color: orange);\r\n@include language-dropdown-theme('success', $item-active-background-color: green);",
                    "styleUrl": "./login-language-dropdown-story.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "NavigationDrawerComponent",
            "id": "component-NavigationDrawerComponent-5de62e4e4e68718831d1c23f9539e2f41d26738303ffbe638f6cf78384d0e5f0b2fb7d81f88ea58b7b4deb27b89c33c0113a19fb6169cedc8aac185b888e3aa5",
            "file": "projects/zs-lib/src/lib/components/navigation/navigation-drawer/navigation-drawer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "zambon-lib-navigation-drawer",
            "styleUrls": [
                "./navigation-drawer.component.scss",
                "./navigation-drawer.component-animations.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navigation-drawer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "menus",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "MenuItem[] | null",
                    "decorators": []
                },
                {
                    "name": "userDepartment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "userImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "SafeUrl",
                    "decorators": []
                },
                {
                    "name": "userName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "navigated",
                    "defaultValue": "new EventEmitter<MenuItem>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeRootNode",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem | null",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "collapsed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentScroll",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "firstOpened",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "navMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLUListElement>",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'navMenu'"
                        }
                    ]
                },
                {
                    "name": "scrolling",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scrollingTimer",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeJS.Timeout | null",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clearSelection",
                    "args": [
                        {
                            "name": "menu",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "menu",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeFloatMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        131
                    ]
                },
                {
                    "name": "getOffsetHeight",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getOffsetTop",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "menuClick",
                    "args": [
                        {
                            "name": "menu",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "menu",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectMenu",
                    "args": [
                        {
                            "name": "menu",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "menu",
                            "type": "MenuItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleState",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        131
                    ]
                },
                {
                    "name": "updateScroll",
                    "args": [
                        {
                            "name": "event",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { SafeUrl } from '@angular/platform-browser';\nimport { of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\n\nimport { MenuItem } from '../../../models/menu-item';\n\n@Component({\n    selector: 'zambon-lib-navigation-drawer',\n    templateUrl: './navigation-drawer.component.html',\n    styleUrls: [\n        './navigation-drawer.component.scss',\n        './navigation-drawer.component-animations.scss'\n    ]\n})\nexport class NavigationDrawerComponent implements OnInit {\n\n    @Input() menus: MenuItem[] | null = null;\n\n    public firstOpened: boolean = true;\n    public collapsed: boolean = false;\n    public currentScroll: number = 0;\n\n    public scrolling: boolean = false;\n    private scrollingTimer: NodeJS.Timeout | null = null;\n\n    @Input() userName!: string;\n    @Input() userDepartment!: string;\n    @Input() userImage!: SafeUrl;\n\n    @ViewChild('navMenu') navMenu!: ElementRef<HTMLUListElement>;\n\n    @Output() navigated = new EventEmitter<MenuItem>();\n\n    private activeRootNode: MenuItem | null = null;\n\n    constructor() { }\n\n    ngOnInit(): void { \n    }\n\n\n    public async toggleState() {\n        if (this.activeRootNode?.floatMenuState === 'show') {\n            await this.clearSelection(this.activeRootNode);\n            this.activeRootNode = null;\n        }\n\n        this.collapsed = !this.collapsed;\n        this.firstOpened = false;\n    }\n\n\n    async menuClick(menu: MenuItem) {\n        await this.selectMenu(menu);\n\n        if (menu.url) {\n            this.navigated.emit(menu);\n\n            if (this.collapsed) {\n                this.closeFloatMenu();\n            }\n            else if (this.activeRootNode) {\n                this.clearSelection(this.activeRootNode);\n            }\n        }\n    }\n\n    private async clearSelection(menu: MenuItem): Promise<void> {\n        if (!(menu.parent) && menu.floatMenuState == 'show') {\n            menu.floatMenuState = 'closing';\n\n            await of(menu)\n                .pipe(\n                    delay(400),\n                    map(menu => {\n                        menu.floatMenuState = 'hide';\n                        return menu;\n                    }),\n                    delay(100),\n                    map(menu => {\n                        menu.floatMenuState = '';\n                        return;\n                    })\n                ).toPromise();\n        }\n\n        menu.selected = false;\n        menu = menu.children.filter(el => el.selected)[0];\n        if (menu) {\n            this.clearSelection(menu);\n        }\n        return;\n    }\n\n    private async selectMenu(menu: MenuItem): Promise<void> {\n        const rootNode = menu.getRootNode();\n\n        if (this.collapsed && menu.parent === null) {\n            if (this.activeRootNode?.floatMenuState === 'show') {\n                this.clearSelection(this.activeRootNode);\n\n                if (this.activeRootNode === menu) {\n                    this.activeRootNode = null;\n                    return;\n                }\n            }\n            else if (this.activeRootNode && this.activeRootNode !== menu) {\n                this.clearSelection(this.activeRootNode);\n            }\n\n            if (menu.children.length > 0) {\n                this.activeRootNode = menu;\n                this.activeRootNode.floatMenuState = 'opening';\n                this.activeRootNode.selected = true;\n                \n                return of(this.activeRootNode)\n                    .pipe(\n                        delay(400),\n                        map(menu => {\n                            menu.floatMenuState = 'show';\n                        })\n                    ).toPromise();\n            }\n        }\n        else {\n            if (this.activeRootNode) {\n                if (this.activeRootNode !== rootNode) {\n                    await this.clearSelection(this.activeRootNode);\n                }\n                else {\n                    let activeNode: MenuItem | null = this.activeRootNode;\n                    let menuNode = rootNode;\n\n                    while (activeNode) {\n                        if (activeNode === menu) {\n                            this.clearSelection(activeNode);\n\n                            if (activeNode === this.activeRootNode) {\n                                this.activeRootNode = null;\n                            }\n                            return;\n                        }\n                        else if (activeNode !== menuNode) {\n                            this.clearSelection(activeNode);\n                            break;\n                        }\n                        \n                        activeNode = activeNode.children.filter(el => el.selected)[0];\n\n                        menuNode = menuNode.children.filter(el => el.id == menu.id)[0]\n                                    ?? menuNode.children.filter(el => el.selected)[0];\n                    }\n                }\n            }\n        }\n        \n        this.activeRootNode = rootNode;\n        menu.selected = true;\n    }\n\n\n    public async closeFloatMenu() {\n        if (this.activeRootNode && this.activeRootNode.floatMenuState === 'show') {\n            await this.clearSelection(this.activeRootNode);\n        }\n    }\n\n\n    public getOffsetHeight(): number {\n        return this.navMenu.nativeElement.offsetHeight;\n    }\n\n    public getOffsetTop(): number {\n        return this.navMenu.nativeElement.offsetTop;\n    }\n\n    public updateScroll(event: number) {\n        this.currentScroll = event;\n        this.scrolling = true;\n\n        if(this.scrollingTimer) {\n            clearTimeout(this.scrollingTimer);\n        }\n\n        this.scrollingTimer = setTimeout(() => {\n            this.scrolling = false;\n            this.scrollingTimer = null;\n        }, 100);\n    }\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../assets/styles/variables/navigation.theme\";\r\n\r\n@import \"../../../../assets/styles/mixins/background\";\r\n@import '../../../../assets/styles/mixins/no-select';\r\n@import \"../../../../assets/styles/mixins/scroll\";\r\n\r\n.menu {\r\n    color: darken($home-base-color, 10%);\r\n\r\n    box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.2), 6px 0 20px 0 rgba(0, 0, 0, 0.19);\r\n    -webkit-box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.2), 6px 0 20px 0 rgba(0, 0, 0, 0.19);\r\n    -moz-box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.2), 6px 0 20px 0 rgba(0, 0, 0, 0.19);\r\n\r\n    .navbar-header {\r\n        @include background(darken($home-base-color3, 5%), .95);\r\n\r\n        .logo-container {\r\n            text-align: center;\r\n            position: relative;\r\n            height: 50px;\r\n\r\n            .logo-expanded, .logo-collapsed {\r\n                position: absolute;\r\n                left: 0;\r\n                top: 0;\r\n                height: 100%;\r\n            }\r\n\r\n            .logo-expanded {\r\n                width: $menu-width-expanded;\r\n                background: url(#{$home-expanded-logo-url}) no-repeat center center;\r\n                background-size: contain;\r\n            }\r\n    \r\n            .logo-collapsed {\r\n                width: $menu-width-collapsed;\r\n                background: url(#{$home-collapsed-logo-url}) no-repeat center center;\r\n                background-size: contain;\r\n            }\r\n        }\r\n\r\n        .profile-container {\r\n            height: 48px;\r\n\r\n            .profile-picture {\r\n                -webkit-flex: 0 0 48px;\r\n                flex: 0 0 48px;\r\n\r\n                background-color: $home-base-color;\r\n                border-radius: 24px;\r\n                max-height: 48px;\r\n                margin-right: .7rem;\r\n                margin-left: .7rem;\r\n                overflow: hidden;\r\n                width: 48px;\r\n\r\n                @include no-select();\r\n    \r\n                img {\r\n                    width: 48px;\r\n                    height: 48px;\r\n                }\r\n            }\r\n            \r\n            .user-name, .user-department {\r\n                flex: 0 0 50%;\r\n                -webkit-flex: 0 0 50%;\r\n                font-size: .9rem;\r\n                width: calc(#{$menu-width-expanded} - #{$menu-width-collapsed});\r\n                \r\n                @include no-select();\r\n            }\r\n    \r\n            .user-name {\r\n                font-weight: bold;\r\n            }\r\n    \r\n            .user-department {\r\n                font-weight: 100;\r\n                font-size: .8rem;\r\n                color: lighten($home-fore-color, 40%);\r\n            }\r\n        }\r\n    }\r\n\r\n    .navbar-menu {\r\n        overflow-y: auto;\r\n        @include scroll(darken($home-base-color3, 7%));\r\n\r\n        .nav {\r\n            z-index: 1;\r\n                \r\n            .background-fill {\r\n                z-index: -1;\r\n                @include background(darken($home-base-color3, 7%), .95);\r\n            }\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./navigation-drawer.component.scss"
                },
                {
                    "data": "@import \"../../../../assets/styles/variables/navigation.theme\";\r\n\r\n/* Animations */\r\n@keyframes collapse {\r\n    from { width: $menu-width-expanded; }\r\n    to { width: $menu-width-collapsed; }\r\n}\r\n\r\n@keyframes expand {\r\n    from { width: $menu-width-collapsed; }\r\n    to { width: $menu-width-expanded; }\r\n}\r\n\r\n\r\n@keyframes fadeout {\r\n    from { opacity: 1; }\r\n    to { opacity: 0; }\r\n}\r\n\r\n@keyframes fadein {\r\n    from { opacity: 0; }\r\n    to { opacity: 1; }\r\n}\r\n\r\n\r\n.menu {\r\n    /* Collapsed */\r\n    &.collapsed {\r\n        width: $menu-width-collapsed;\r\n\r\n        &:not(.first-opened) {\r\n            animation: collapse $menu-animation-speed ease-in-out;\r\n\r\n            .logo-container {\r\n                .logo-expanded {\r\n                    animation: fadeout $opacity-animation-speed ease;\r\n                    animation-fill-mode: forwards;\r\n                }\r\n                .logo-collapsed {\r\n                    animation: fadein $opacity-animation-speed ease;\r\n                    animation-fill-mode: forwards;\r\n                }\r\n            }\r\n\r\n            .profile-container {\r\n                .user-name, .user-department {\r\n                    animation: fadeout $opacity-animation-speed ease;\r\n                    animation-fill-mode: forwards;\r\n                }\r\n            }\r\n        }\r\n\r\n        .logo-container {\r\n            .logo-expanded {\r\n                opacity: 0;\r\n            }\r\n        }\r\n\r\n        .profile-container {\r\n            .user-name, .user-department {\r\n                opacity: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    /* Expanded */\r\n    &.expanded {\r\n        width: $menu-width-expanded;\r\n\r\n        &:not(.first-opened) {\r\n            animation: expand $menu-animation-speed ease-in-out;\r\n\r\n            .logo-container {\r\n                .logo-expanded {\r\n                    animation: fadein $opacity-animation-speed ease;\r\n                    animation-fill-mode: forwards;\r\n                }\r\n                .logo-collapsed {\r\n                    animation: fadeout $opacity-animation-speed ease;\r\n                    animation-fill-mode: forwards;\r\n                }\r\n            }\r\n\r\n            .profile-container {\r\n                .user-name, .user-department {\r\n                    animation: fadein $opacity-animation-speed ease;\r\n                    animation-fill-mode: forwards;\r\n                }\r\n            }\r\n        }\r\n\r\n        .logo-container {\r\n            .logo-collapsed {\r\n                opacity: 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n@media (max-width:768px) {\r\n    .menu {\r\n        margin-left: -70px;\r\n        max-width: 70px !important;\r\n        width: 70px !important;\r\n        transition: margin-left $menu-animation-speed ease-in-out;\r\n\r\n        &.collapsed {\r\n            margin-left: 0px;\r\n            padding-left: 0px;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./navigation-drawer.component-animations.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 35
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav class=\"menu h-100 mh-100 d-flex flex-column\"\n    [class.expanded]=\"!collapsed\"\n    [class.collapsed]=\"collapsed\"\n    [class.first-opened]=\"firstOpened\"\n    >\n    \n    <!--Header-->\n    <div class=\"navbar-header pt-2 pb-3 flex-shrink-0\">\n        <div class=\"logo-container replace-content d-flex justify-content-center mb-3\">\n            <div class=\"logo-expanded\"></div>\n            <div class=\"logo-collapsed\"></div>\n        </div>\n\n        <div class=\"profile-container d-flex flex-wrap flex-column\">\n            <div class=\"profile-picture\">\n                <img [src]=\"this.userImage\" />\n            </div>\n            <div class=\"user-name\">{{ this.userName }}</div>\n            <div class=\"user-department\">{{ this.userDepartment }}</div>\n        </div>\n    </div>\n\n    <div class=\"navbar-menu d-flex flex-column flex-grow-1\" #navMenu zambon-lib-track-scroll (scrolled)=\"updateScroll($event)\">\n        <ul class=\"nav flex-column flex-nowrap w-100 flex-grow-1\">\n    \n            <ng-container *ngIf=\"menus !== null\">\n                <ng-container *ngFor=\"let menu of menus\">\n                    <!-- <app-nav-item\n                        [parentCollapsed]=\"collapsed\"\n                        [parentScrolling]=\"scrolling\"\n                        [firstOpened]=\"firstOpened\"\n                        [menu]=\"menu\"\n                        [parentScroll]=\"currentScroll\"\n                        [parentOffsetTop]=\"getOffsetTop()\"\n                        [parentOffsetHeight]=\"getOffsetHeight()\"\n                        (menuClick)=\"menuClick($event)\"\n                        (closeFloatMenu)=\"closeFloatMenu()\"></app-nav-item> -->\n                </ng-container>\n            </ng-container>\n    \n            <li class=\"background-fill flex-grow-1\">\n                <div *ngIf=\"menus === null\" class=\"loading text-center pt-2\">\n                    <i class=\"spinner-border spinner-border-md\"></i>\n                </div>\n            </li>\n        </ul>\n    </div>\n</nav>"
        },
        {
            "name": "NavigationDrawerStoryComponent",
            "id": "component-NavigationDrawerStoryComponent-71e5f34fa257010e27b21cb9c6db92c11400e5fc5592aa9e9037be9608a75a3dcf3c1e2200cc642f978075b67ee8761455fba898d6238f2c0f64f1574d8157a8",
            "file": "stories/navigation/navigation-drawer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-navigation-drawer",
            "styleUrls": [
                "./navigation-drawer-story.component.scss"
            ],
            "styles": [],
            "template": "<div class=\"d-flex box\">\n    <zambon-lib-navigation-drawer #navigation\n        [userName]=\"'Test'\"\n        [userDepartment]=\"'Test department'\"\n        [userImage]=\"null\"\n    >\n    </zambon-lib-navigation-drawer>\n\n    <div class=\"main d-flex flex-grow-1 flex-column\">\n        <div class=\"toolbar position-relative d-flex flex-shrink-0 p-2 align-items-center\">\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"toggleNavigation()\">\n                <i class=\"fas fa-bars\"></i>\n            </button>\n        </div>\n\n        <div class=\"container-fluid position-relative flex-grow-1 pt-3 pb-2\">\n        </div>\n    </div>\n</div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "navigation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavigationDrawerComponent",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'navigation'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "toggleNavigation",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { MenuItem, NavigationDrawerComponent } from 'zs-lib';\n\n@Component({\n  selector: 'storybook-navigation-drawer',\n  template: `\n    <div class=\"d-flex box\">\n        <zambon-lib-navigation-drawer #navigation\n            [userName]=\"'Test'\"\n            [userDepartment]=\"'Test department'\"\n            [userImage]=\"null\"\n        >\n        </zambon-lib-navigation-drawer>\n        \n        <div class=\"main d-flex flex-grow-1 flex-column\">\n            <div class=\"toolbar position-relative d-flex flex-shrink-0 p-2 align-items-center\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"toggleNavigation()\">\n                    <i class=\"fas fa-bars\"></i>\n                </button>\n            </div>\n\n            <div class=\"container-fluid position-relative flex-grow-1 pt-3 pb-2\">\n            </div>\n        </div>\n    </div>`,\n  styleUrls: [ './navigation-drawer-story.component.scss' ]\n})\nexport default class NavigationDrawerStoryComponent implements AfterViewInit {\n  @ViewChild('navigation') navigation!: NavigationDrawerComponent;\n  \n  constructor() {\n    \n  }\n\n  async ngAfterViewInit(): Promise<void> {\n    const home = new MenuItem(); home.id = 1; home.icon = 'home'; home.label = 'Home page'; home.url = '';\n    \n    const menus = [\n      home\n    ];\n\n    this.navigation.menus = menus;  \n  }\n\n\n  toggleNavigation() {\n    this.navigation.toggleState();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".box {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    \r\n    .main {\r\n        overflow: hidden;\r\n\r\n        .toolbar {\r\n            border-bottom: 1px solid darken(white, 15%);\r\n            font-size: 0.9rem;\r\n            color: black;\r\n            z-index: 2;\r\n\r\n            box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.2), 0 3px 20px 0 rgba(0, 0, 0, 0.19);\r\n            -webkit-box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.2), 0 3px 20px 0 rgba(0, 0, 0, 0.19);\r\n            -moz-box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.2), 0 3px 20px 0 rgba(0, 0, 0, 0.19);\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./navigation-drawer-story.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 29
            },
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-432c9ae0bcf6e2e1f46701f7565a67376cb10145b7d049c5fe930cf8f075c6e02e24151589750b18cbaa8266f7c61393b95c4d833fbfd71ee228904aa014349f",
            "file": "stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "ComponentsModule",
            "id": "module-ComponentsModule-485d125e94f40da0139733f6210e5ef566aa9534f5a974a55e2c51bfd31f9b1e96fc7a7150f9c207f525becbc94df493cbcab3b2337e96ae655b68e4d5afb634",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/zs-lib/src/lib/components/components.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { LoginModule } from './login/login.module';\nimport { NavigationModule } from './navigation/navigation.module';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    LoginModule,\n    NavigationModule\n  ],\n  exports: [\n      LoginModule,\n      NavigationModule\n  ]\n})\nexport class ComponentsModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "LoginModule"
                        },
                        {
                            "name": "NavigationModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LoginModule"
                        },
                        {
                            "name": "NavigationModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DirectivesModule",
            "id": "module-DirectivesModule-1d093c3944a0f8ff8485df39e57af9ef000cf4987b13ef17346473ba0cb6785499ec37747b37d0d1f4a8c84e722f32413d9aefb635e80fc54fdbc89b544f8a1f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/zs-lib/src/lib/directives/directives.module.ts",
            "methods": [],
            "sourceCode": "import { TrackScrollDirective } from './track-scroll.directive';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [ TrackScrollDirective ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n      TrackScrollDirective\n  ]\n})\nexport class DirectivesModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TrackScrollDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TrackScrollDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "I18nModule",
            "id": "module-I18nModule-ec01037bb2a8a19c4723f310f3134fefc2bb37f8c607992f7fcb977e2e0f0552c894aeb37c4dab3b57fcf79ef6242a1ba16f7fa5d071c4fb9905abc467a5f1b2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/zs-lib/src/lib/i18n/i18n.module.ts",
            "methods": [
                {
                    "name": "forRoot",
                    "args": [
                        {
                            "name": "languages",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "ModuleWithProviders<I18nModule>",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "languages",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { Inject, InjectionToken, LOCALE_ID, ModuleWithProviders, NgModule } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { TranslateCacheModule, TranslateCacheSettings, TranslateCacheService } from 'ngx-translate-cache';\n\n\nexport const Languages = new InjectionToken<string[]>(\"languages\");\n\n@NgModule({\n    imports: [\n        HttpClientModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: translateLoaderFactory,\n                deps: [HttpClient]\n            }\n        }),\n        TranslateCacheModule.forRoot({\n            cacheService: {\n                provide: TranslateCacheService,\n                useFactory: translateCacheFactory,\n                deps: [TranslateService, TranslateCacheSettings]\n            },\n            cacheMechanism: 'Cookie'\n        })\n    ],\n    providers: [\n        { provide: LOCALE_ID, deps: [TranslateService], useFactory: (ts: TranslateService) => ts.currentLang }\n    ],\n    exports: [TranslateModule]\n})\nexport class I18nModule {\n\n    constructor(@Inject(Languages) languages: string[], translate: TranslateService, translateCacheService: TranslateCacheService) {\n        translateCacheService.init();\n        \n        translate.addLangs(languages);\n        translate.setDefaultLang(languages[0]);\n\n        const browserLang = translateCacheService.getCachedLanguage() || translate.getBrowserLang();\n        translate.use(languages.includes(browserLang) ? browserLang : languages[0]);\n    }\n\n    static forRoot(languages?: string[]): ModuleWithProviders<I18nModule> {\n        return {\n            ngModule: I18nModule,\n            providers: [ { provide: Languages, useValue: languages } ]\n        }\n    }\n}\n\nexport function translateLoaderFactory(httpClient: HttpClient) {\n    return new TranslateHttpLoader(httpClient);\n}\n\nexport function translateCacheFactory(translateService: TranslateService, translateCacheSettings: TranslateCacheSettings) {\n    return new TranslateCacheService(translateService, translateCacheSettings);\n}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoginModule",
            "id": "module-LoginModule-9ae69da7e88ce2d355568bc80a0a246ad2e9a255b1addb837440dea76487220eaf56f546d017f94967df9d063c911f2c6655dd82a45521fd1f6201ea130b1ab8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/zs-lib/src/lib/components/login/login.module.ts",
            "methods": [],
            "sourceCode": "import { TranslateModule } from '@ngx-translate/core';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { LoginInputComponent } from './login-input/login-input.component';\nimport { LoginLanguageDropdownComponent } from './login-language-dropdown/login-language-dropdown.component';\n\n\n@NgModule({\n  declarations: [\n    LoginInputComponent,\n    LoginLanguageDropdownComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TranslateModule\n  ],\n  exports: [\n    LoginInputComponent,\n    LoginLanguageDropdownComponent\n  ]\n})\nexport class LoginModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoginInputComponent"
                        },
                        {
                            "name": "LoginLanguageDropdownComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LoginInputComponent"
                        },
                        {
                            "name": "LoginLanguageDropdownComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MyLibModule",
            "id": "module-MyLibModule-411e9a3ee31acaf64f4b45b3d7851b14da8a0d8f101dc72241f5ae52ffbd75adffd20954431d1f83d07bcb6eb28004a671e499d183de1ee9b33a8665ad85fc3b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/zs-lib/src/lib/my-lib.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ComponentsModule } from './components/components.module';\r\nimport { I18nModule } from './i18n/i18n.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n      CommonModule,\r\n      I18nModule,\r\n      ComponentsModule,\r\n  ],\r\n  exports: [\r\n    I18nModule,\r\n    ComponentsModule\r\n  ]\r\n})\r\nexport class MyLibModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "I18nModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "I18nModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NavigationModule",
            "id": "module-NavigationModule-18dad92d55572be1bd5e8229cfebef59a056f3753a1124d52816da4e5cb49cce7561ce1adad47f75080a942e632c4934520039b29e58b7943f9c36574f657d0c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/zs-lib/src/lib/components/navigation/navigation.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DirectivesModule } from './../../directives/directives.module';\nimport { NavigationDrawerComponent } from './navigation-drawer/navigation-drawer.component';\n\n\n@NgModule({\n  declarations: [\n      NavigationDrawerComponent\n  ],\n  imports: [\n    CommonModule,\n    DirectivesModule\n  ],\n  exports: [\n    NavigationDrawerComponent\n  ]\n})\nexport class NavigationModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NavigationDrawerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DirectivesModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NavigationDrawerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/my-lib.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/login/login-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/navigation/navigation-drawer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/login/login-language-dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Languages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/zs-lib/src/lib/i18n/i18n.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<string[]>(\"languages\")"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/my-lib.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MyLibComponent>",
                "defaultValue": "(args: MyLibComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/login/login-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LoginInputStoryComponent>",
                "defaultValue": "(args: LoginInputStoryComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/navigation/navigation-drawer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<NavigationDrawerStoryComponent>",
                "defaultValue": "(args: NavigationDrawerStoryComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/login/login-language-dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LoginLanguageInputDropdownStoryComponent>",
                "defaultValue": "(args: LoginLanguageInputDropdownStoryComponent) => ({\r\n  props: args,\r\n})"
            }
        ],
        "functions": [
            {
                "name": "translateCacheFactory",
                "file": "projects/zs-lib/src/lib/i18n/i18n.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateCacheSettings",
                        "type": "TranslateCacheSettings",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateCacheSettings",
                        "type": "TranslateCacheSettings",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "translateLoaderFactory",
                "file": "projects/zs-lib/src/lib/i18n/i18n.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "stories/my-lib.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/my-lib.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/my-lib.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MyLibComponent>",
                    "defaultValue": "(args: MyLibComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/login/login-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/login/login-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/login/login-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LoginInputStoryComponent>",
                    "defaultValue": "(args: LoginInputStoryComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/navigation/navigation-drawer.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/navigation/navigation-drawer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/navigation/navigation-drawer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<NavigationDrawerStoryComponent>",
                    "defaultValue": "(args: NavigationDrawerStoryComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/login/login-language-dropdown.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/login/login-language-dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/login/login-language-dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LoginLanguageInputDropdownStoryComponent>",
                    "defaultValue": "(args: LoginLanguageInputDropdownStoryComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/zs-lib/src/lib/i18n/i18n.module.ts": [
                {
                    "name": "Languages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/zs-lib/src/lib/i18n/i18n.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<string[]>(\"languages\")"
                }
            ],
            "stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {
            "projects/zs-lib/src/lib/i18n/i18n.module.ts": [
                {
                    "name": "translateCacheFactory",
                    "file": "projects/zs-lib/src/lib/i18n/i18n.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "translateService",
                            "type": "TranslateService",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "translateCacheSettings",
                            "type": "TranslateCacheSettings",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "translateService",
                            "type": "TranslateService",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "translateCacheSettings",
                            "type": "TranslateCacheSettings",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "translateLoaderFactory",
                    "file": "projects/zs-lib/src/lib/i18n/i18n.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "httpClient",
                            "type": "HttpClient",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "httpClient",
                            "type": "HttpClient",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "projects/zs-lib/src/lib/components/login/login-input/login-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/zs-lib/src/lib/components/login/login-language-dropdown/login-language-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginLanguageDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/zs-lib/src/lib/components/navigation/navigation-drawer/navigation-drawer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationDrawerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "projects/zs-lib/src/lib/directives/track-scroll.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TrackScrollDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/zs-lib/src/lib/i18n/i18n.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "translateCacheFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/zs-lib/src/lib/i18n/i18n.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "translateLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/zs-lib/src/lib/i18n/i18n.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Languages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/zs-lib/src/lib/models/menu-item.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "stories/login/login-input-story.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginInputStoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "stories/login/login-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/login/login-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/login/login-language-dropdown-story.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginLanguageInputDropdownStoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "stories/login/login-language-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/login/login-language-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/my-lib.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/my-lib.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/navigation/navigation-drawer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationDrawerStoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "stories/navigation/navigation-drawer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/navigation/navigation-drawer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}